apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "passport.fullname" . }}
  labels:
    {{- include "passport.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount}}
  {{- end }}
  selector:
    matchLabels:
      {{- include "passport.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "passport.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "passport.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          {{- if .Values.livenessProbe.enable }}
          livenessProbe:
            httpGet:
              path: {{ .Values.livenessProbe.path }}
              port: http
          {{- end }}
          {{- if .Values.readinessProbe.enable }}
          readinessProbe:
            httpGet:
              path: {{ .Values.readinessProbe.path }}
              port: http
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.existingSecret }}
                  key: db.password
            - name: DB_USER
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.existingConfigmap }}
                  key: db.user
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.existingConfigmap }}
                  key: db.host
            - name: DB_PORT
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.existingConfigmap }}
                  key: db.port
            - name: DB_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.existingConfigmap }}
                  key: db.database
            - name: DB_SSL
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.existingConfigmap }}
                  key: db.ssl

            - name: REDIS_ADDR
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.existingConfigmap }}
                  key: redis.addr
            - name: REDIS_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.existingConfigmap }}
                  key: redis.password
            - name: REDIS_DB
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.existingSecret }}
                  key: redis.db

            - name: TOKEN_ENABLE
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.existingConfigmap }}
                  key: token.enable
            - name: TOKEN_ISSUER
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.existingConfigmap }}
                  key: token.issuer
            - name: TOKEN_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.existingSecret }}
                  key: token.key

            - name: NOTIFY_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.existingConfigmap }}
                  key: notify.host

            - name: WEB_LISTEN
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.existingConfigmap }}
                  key: web.listen
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}